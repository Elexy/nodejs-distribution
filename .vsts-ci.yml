queue: Hosted Linux Preview
# setup build host
steps:
#- checkout: none # skip checkout while debugging
  # install Go
- task: GoTool@0
  displayName: setup Golang
  inputs:
    version: '1.10'
  #  goPath: $(GOPATH)
  #  goBin: $(GOPATH)/bin
  # install mage
- script: |
            go get -u -d github.com/magefile/mage
            cd $GOPATH/src/github.com/magefile/mage
            go run bootstrap.go
  displayName: setup mage make tool
  # install and/or build other dependencies
- script: |
            sudo apt-add-repository ppa:projectatomic/ppa
            sudo apt-get update -y
            sudo apt-get install -y skopeo
  displayName: install misc dependencies
  # configure
- script: |
            if [[ -z $OS || -z $VERSION || -z $V8 || -z $NPM || -z $TAG ]]; then
                echo 'one or more variables are undefined, assuming build script debug mode'
                export VERSION=10.0.0
                export OS=centos7
                export V8=6.6.346.24
                export NPM=5.6.0
                export TAG=test-only
                export PREBUILT=true
                export OS=centos7 && source contrib/etc/util.sh
                export FROM_DATA=\"$(getBaseImageForOs)\"
            else
                source contrib/etc/util.sh
                if osSupported ${OS}; then
                    echo ...
                    export FROM_DATA=\"$(getBaseImageForOs)\"
                else
                    echo "Unsupported os: $OS"
                    exit 1
                fi
            fi
            go get github.com/docker/docker/api/types
            go get github.com/mholt/archiver
            go get github.com/spf13/viper
            mage showConfig
  displayName: configure
  env:
    OS: $( OS )
    VERSION: $( VERSION )
    V8: $( V8 )
    NPM: $( NPM )
    TAG: $( TAG )

#- script: |
#            export PATH=$PATH:$GOBIN:/usr/share/go/bin
#            go get github.com/docker/docker/api/types
#            go get github.com/mholt/archiver
#            go get github.com/spf13/viper
#            mage showConfig
  displayName: Info
- script: |
            export PATH=$PATH:$GOBIN:/usr/share/go/bin
            mage installSources
  displayName: Install Sources
- script: |
            export PATH=$PATH:$GOBIN:/usr/share/go/bin
            mage build
  displayName: Build
- script: |
            if [ "$OS" == "rhel7" ]; then
                export PATH=$PATH:$GOBIN:/usr/share/go/bin
                mage archive
            else
                echo "OS is not [rhel7] not archiving"
            fi
  displayName: Archive
- script: |
            if [ "$OS" == "rhel7" ]; then
                echo "access_key = $AWS_ACCESS_KEY_ID" >> ~/.s3cfg
                echo "secret_key = $AWS_SECRET_ACCESS_KEY" >> ~/.s3cfg
                export PATH=$PATH:$GOBIN:/usr/share/go/bin
                mage upload
            else
                echo "OS is not [rhel7] not uploading"
            fi
  displayName: Upload
- script: |
            export PATH=$PATH:$GOBIN:/usr/share/go/bin
            mage squash
  displayName: Docker squash
- script: |
            export PATH=$PATH:$GOBIN:/usr/share/go/bin
            mage test
  displayName: Test
- script: |
            if [ "$OS" == "rhel7" ]; then
                echo "OS is [rhel7] not publishing to Docker Hub"
            else
                export PATH=$PATH:$GOBIN:/usr/share/go/bin
                mage publish
            fi
  displayName: Publish to Docker Hub
- script: |
            if [ "$OS" == "rhel7" ]; then
                source contrib/etc/util.sh
                if ! isDebug && shouldPublish; then
                    export RH_SECRET=$(getProjectSecret)
                    export RH_ENDPOINT="scan.connect.redhat.com"
                    export RH_PROJECT=$(getProjectId)
                    export PATH=$PATH:$GOBIN:/usr/share/go/bin
                    mage publishRedHat
                fi
            else
                echo "OS is not [rhel7] not publishing to Red Hat Catalog"
            fi
  displayName: Publish to Red Hat
